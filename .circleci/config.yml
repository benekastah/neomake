version: 2

common: &common
  filters:
    branches:
      only:
        - circleci
  working_directory: ~/repo
  steps:
    - checkout
    - restore_cache:
        keys:
          - v1-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Makefile" }}
          - v1-deps-
    # - run:
    #     name: Install Neovim
    #     command: eval "$(curl -Ss https://raw.githubusercontent.com/neovim/bot-ci/master/scripts/travis-setup.sh) nightly-x64"
    - run:
        name: Install covimerage
        command: |
          pip install --user https://github.com/Vimjas/covimerage/archive/develop.zip
          PATH=$HOME/.local/bin:$PATH
          covimerage --version
    - run: make --keep-going $MAKE_ARGS || exit 1
    - run:
        name: upload coverage results for non-checkqa builds
        command: |
          if [[ "$CIRCLE_JOB" != 'check' ]]; then
            set -x
            src_dir="$PWD"
            shopt -s nullglob
            for d in profile-output.*; do
              prof_name=${d#profile-output.}
              prof_flags=${prof_name//-/ }
              prof_flags=${prof_flags//./}

              profiles="$(find "$d" -name '*.profile')"
              if [[ -z "$profiles" ]]; then
                echo "warning: no profiles found in $d."
                exit 2
              fi
              sed -i "s:^SCRIPT  /testplugin/:SCRIPT  $src_dir/:" $profiles

              covimerage write_coverage --source . $profiles
              covimerage report -m
              covimerage xml --include 'autoload/*' --include 'plugin/*' --include 'tests/*'
              codecov -X search gcov pycov -f coverage.xml --required \
                --name "$prof_name" --flags $CODECOV_FLAGS $prof_flags
            done
            set +x
          fi
    - save_cache:
        paths:
          - tests/vim/plugins/vader
          - tests/vim/plugins/fugitive
        key: v1-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "Makefile" }}
jobs:
  nvim:
    <<: *common
    docker:
      - image: neomake/vims-for-tests
        environment:
          MAKE_ARGS=testcoverage
          NEOMAKE_TEST_PROFILE_DIR=profile-output.nvim-nvimmaster
          TEST_VIM=nvim
  check:
    <<: *common
    docker:
      - image: neomake/vims-for-tests:circleci
        environment:
          MAKE_ARGS=check

workflows:
  version: 2
  test:
    jobs:
      - nvim
      # - check
