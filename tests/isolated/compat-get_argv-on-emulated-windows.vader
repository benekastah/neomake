Include: ../include/setup.vader

Execute (neomake#compat#get_argv on (emulated) Windows):
  Save &shell, &shellcmdflag
  set shell=cmd.exe
  set shellcmdflag=/c
  function! neomake#utils#IsRunningWindows()
    return 1
  endfunction
  runtime autoload/neomake/compat.vim

  let out = neomake#compat#get_argv({'exe': 'sh'}, ['-c', 'echo 1'], 1)
  if has('nvim')
    AssertEqual out, ['cmd.exe', '/c', 'sh -c "echo 1"']
  else
    AssertEqual out, 'cmd.exe /c (sh -c "echo 1")'
  endif

  " Gets wrapped in shell twice.
  let out = neomake#compat#get_argv({'exe': 'cmd.exe'}, ['/c', 'echo 1'], 1)
  if has('nvim')
    AssertEqual out, ['cmd.exe', '/c', 'cmd.exe /c "echo 1"']
  else
  endif
"   let out = neomake#compat#get_argv('cmd.exe', ['/c', 'echo', '1'], 1)
"   AssertEqual out, 'cmd.exe /c echo 1'
"   let out = neomake#compat#get_argv('cmd.exe', ['/c', 'echo "1 1"'], 1)
"   AssertEqual out, 'cmd.exe /c echo "1 1"'
"   let out = neomake#compat#get_argv('cmd.exe', ['/c', 'echo', '"1 1"'], 1)
"   AssertEqual out, 'cmd.exe /c echo "1 1"'

  " Handled correctly with MakerFromCommand/NeomakeSh.
  let maker = neomake#utils#MakerFromCommand('echo "1 2"')
  let maker = neomake#GetMaker(maker)
  let jobinfo = NeomakeTestsFakeJobinfo()
  let jobinfo.file_mode = 0
  " This is wrong/expected, since fn (constructor) was not called.
  if has('nvim')
    AssertEqual maker._get_argv(jobinfo), ['cmd.exe', '/c', 'unnamed_maker']
  else
    AssertEqual maker._get_argv(jobinfo), 'cmd.exe /c (unnamed_maker)'
  endif

  Log '=========='
  let bound_maker = maker.fn(jobinfo)
  if has('nvim')
    AssertEqual bound_maker._get_argv(jobinfo), ['cmd.exe', '/c', '(echo "1 2")']
  else
    AssertEqual bound_maker._get_argv(jobinfo), 'cmd.exe /c (echo "1 2")'
  endif

  let maker = neomake#utils#MakerFromCommand('echo "1 2" 3')
  let maker = neomake#GetMaker(maker)
  let jobinfo = NeomakeTestsFakeJobinfo()
  let jobinfo.file_mode = 0
  let bound_maker = maker.fn(jobinfo)
  if has('nvim')
    AssertEqual bound_maker._get_argv(jobinfo), ['cmd.exe', '/c', '(echo "1 2" 3)']
  else
    AssertEqual bound_maker._get_argv(jobinfo), 'cmd.exe /c (echo "1 2" 3)'
  endif

Execute (neomake#compat#dev_null on (emulated) Windows):
  AssertEqual g:neomake#compat#dev_null, 'NUL'

  " Restore if not run separately.
  if fnamemodify(g:vader_file, ':t') == 'isolated.vader'
    runtime autoload/neomake/utils.vim
    runtime autoload/neomake/compat.vim
  endif
