Include: include/setup.vader

Before (prepare an empty working directory):
  let s:root = tempname()
  call mkdir(s:root, 'p')
  let s:old_cwd = fnamemodify('.', ':p')
  execute 'cd ' . s:root

After (clean up the working directory):
  execute 'cd ' . s:old_cwd
  execute 'silent !rm -rf ' . s:root

Execute (erlc: common settings):
  new
  file src/myapp.erl

  let args = neomake#makers#ft#erlang#GlobPaths()
  AssertEqual args[:-2], ['-pa', 'ebin', '-I', 'include', '-I', 'src', '-o']
  let output_dir = args[-1]
  Assert isdirectory(output_dir)
  bwipe

Execute (erlc: output to _build/neomake if _build is present):
  call mkdir('_build', 'p')
  new
  file src/myapp.erl

  let args = neomake#makers#ft#erlang#GlobPaths()
  let output_dir = args[-1]
  Assert output_dir =~# '/_build/neomake$'
  Assert isdirectory(output_dir)
  bwipe

Execute (erlc: rebar3 default profile - no rebar.config):
  call mkdir('_build/default/lib/dep1/ebin', 'p')
  new
  file src/myapp.erl

  let args = neomake#makers#ft#erlang#GlobPaths()
  let dep1_ebin_opt = args[6:7]
  let dep1_include_opt = args[8:9]
  AssertEqual ['-pa', s:root . '/_build/default/lib/dep1/ebin'], dep1_ebin_opt
  AssertEqual ['-I', s:root . '/_build/default/lib/dep1/include'], dep1_include_opt
  bwipe

Execute (erlc: rebar3 default profile):
  call mkdir('_build/default/lib/dep1/ebin', 'p')
  write rebar.config
  new
  file src/myapp.erl

  let args = neomake#makers#ft#erlang#GlobPaths()
  let dep1_ebin_opt = args[6:7]
  let dep1_include_opt = args[8:9]
  AssertEqual ['-pa', s:root . '/_build/default/lib/dep1/ebin'], dep1_ebin_opt
  AssertEqual ['-I', s:root . '/_build/default/lib/dep1/include'], dep1_include_opt
  bwipe

Execute (erlc: rebar3 test profile):
  call mkdir('_build/test/lib/dep1/ebin', 'p')
  new
  file test/myapp_SUITE.erl

  let args = neomake#makers#ft#erlang#GlobPaths()
  let dep1_ebin_opt = args[6:7]
  let dep1_include_opt = args[8:9]
  AssertEqual ['-pa', s:root . '/_build/test/lib/dep1/ebin'], dep1_ebin_opt
  AssertEqual ['-I', s:root . '/_build/test/lib/dep1/include'], dep1_include_opt
  bwipe

Execute (erlc: rebar2/erlang.mk deps/ present):
  call mkdir('deps/dep1/ebin', 'p')
  new
  file src/myapp.erl

  let args = neomake#makers#ft#erlang#GlobPaths()
  let dep1_ebin_opt = args[6:7]
  let dep1_include_opt = args[8:9]
  AssertEqual ['-pa', s:root . '/deps/dep1/ebin'], dep1_ebin_opt
  AssertEqual ['-I', s:root . '/deps/dep1/include'], dep1_include_opt
  bwipe

Execute (erlc: buffer local extra deps):
  call mkdir('deps.local/dep1/ebin', 'p')
  new
  file src/myapp.erl
  let b:neomake_erlang_erlc_extra_deps = ['deps.local']


  let args = neomake#makers#ft#erlang#GlobPaths()
  let dep1_ebin_opt = args[6:7]
  let dep1_include_opt = args[8:9]
  AssertEqual ['-pa', 'deps.local/dep1/ebin'], dep1_ebin_opt
  AssertEqual ['-I', 'deps.local/dep1/include'], dep1_include_opt
  bwipe
