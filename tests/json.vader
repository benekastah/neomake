Include: include/setup.vader

Execute (neomake#utils#JSONdecode):
  AssertEqual neomake#utils#JSONdecode('{}'), {}

  let json = '{"dict":{"children":[],"null":null,"true":true,"false":false}}'

  AssertEqual neomake#utils#JSONdecode(json), {
  \ 'dict': {
  \   'false': neomake#compat#json_false,
  \   'true': neomake#compat#json_true,
  \   'children': [],
  \   'null': neomake#compat#json_null}}

  if exists('v:null')
    AssertEqual neomake#compat#json_null, v:null
    AssertEqual neomake#compat#json_true, v:true
    AssertEqual neomake#compat#json_false, v:false
  else
    AssertEqual neomake#compat#json_null, {}
    AssertEqual neomake#compat#json_true, 1
    AssertEqual neomake#compat#json_false, 0
  endif

Execute (neomake#compat#json_null cannot be changed):
  AssertThrows let g:neomake#compat#json_null = 'changed'
  AssertEqual g:vader_exception, 'Vim(let):E741: Value is locked: g:neomake#compat#json_null'
