dist: trusty
sudo: false

language: none
branches:
  only:
    - master

env:
  global:
    - NEOMAKE_DOCKER_IMAGE: neomake/vims-for-tests:5@sha256:58d233a76e29436f10a5b0f9642ceb7f6a361f65f49dfedf0a821ef182568e8b

jobs:
  fast_finish: true
  include:
    - stage: Basic tests
      env: ENV=testnvim
    - env: ENV=testvim
    - env: ENV=vint
      language: python

    - stage: test
    - env: ENV=vimlint
    - env: ENV=docker_test MAKE_ARGS=DOCKER_VIM=neovim-v0.2.0
      services:
        - docker
    - env: ENV=docker_test MAKE_ARGS=DOCKER_VIM=neovim-v0.1.7
      services:
        - docker
    - env: ENV=docker_test MAKE_ARGS=DOCKER_VIM=vim-master
      services:
        - docker
    - env: ENV=docker_test MAKE_ARGS=DOCKER_VIM=vim8069
      services:
        - docker
    # Vim 7.3.429 (Ubuntu Precise)
    - env: ENV=docker_test MAKE_ARGS=DOCKER_VIM=vim73
      services:
        - docker
    - env: ENV=check
      services:
        - docker

install:
  - |
    if [ "$ENV" = "check" ]; then
      echo "Looking for changed files in $TRAVIS_COMMIT_RANGE."
      if ! git diff --exit-code --quiet "$TRAVIS_COMMIT_RANGE" doc/neomake.txt; then
        MAKE_ARGS="$MAKE_ARGS docker_vimhelplint"
        echo 'doc/neomake.txt changed, running docker_vimhelplint'
      fi
    elif [ "$ENV" = "testnvim" ]; then
      eval "$(curl -Ss https://raw.githubusercontent.com/neovim/bot-ci/master/scripts/travis-setup.sh) nightly-x64"

      # Install vim-vimhelplint for one build.
      make build/vimhelplint
    fi

script:
  - |
    if [[ "$ENV" = "testvim" ]]; then
      vim --version
      if ! vim --version 2>&1 | grep -F 'VIM - Vi IMproved 7.4' -A1 | grep -q '^Included patches: 1-52'; then
        echo 'Unexpected Vim version (expected 7.4.52)' >&2
        exit 1
      fi
    fi
    umask 022
    echo "===== running: make $ENV $MAKE_ARGS ====="
    make $ENV $MAKE_ARGS
